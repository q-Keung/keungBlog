
{
  "_id": "XJnhf-SiwXKAQsZv",
  "details": [
      {
    "imgs": "cloud://keung-1f46cf.6b65-keung-1f46cf/qName/q16.jpg",
    "contents": "Vue是尤神开创的一个js库，其涵盖了react与angular两者的优点，用过vue的码友都知道其中有react的组件的概念、虚拟dom的影子也有angular的指令、双向数据绑定的思想。可以说vue是两者的结合，各取其精华，因而vue在开发中易于上手也是相当强大，如今的SPA应用非常广泛，也是当下前端的趋势所以掌握vue对于前端开发人员还是很有必要的。不说那么多题外话了，言归正传。    Vue是个庞大的架构，采用mmvm的设计模式，从14年推出至今已衍生很多附加的功能，想必大家都比较熟悉的vue全家桶。包括有vue+vue-router+vuex以及vue的调试工具vue devtools等。做一vue的技术栈这些都是要掌握的。对于入门的朋友则需要从vue的官方文档入手，首先至少通读一遍vue的技术文档，认识到vue是什么，干什么的，其次是怎么用。具体的 还是要找个开源项目练练手。此外，你在开发vue时正如官方文档里说的要对前端三板斧html、css、js基础扎实，尤其是对JavaScript的面向对象编程的思想以及函数式编程有一定的了解。同时，你还需要熟悉es6的相关知识，不太了解没关系看，建议看阿里阮一峰大神的es6入门文档补补坑。
    首先说的是vue双向绑定原理（ Object.defineProperty()） vue的双向绑定是由数据劫持结合发布者－ 订阅者模式实现的， 那么什么是数据劫持？ vue是如何进行数据劫持的？ 说白了就是通过Object.defineProperty() 来劫持对象属性的setter和getter操作， 在数据变动时做你想要做的事情。 "
  }, 
  {
    "contents": "开发中用的比较多的是computed（计算属性），watch（监听器），vue的父子组件传参 （prop和自定义事件），插槽，再者就是vue的核心--组件，若要对vue运用的更加6的话对组件的复用，模块化编程要有深入的了解，即是考验你对组件封装的能力，这在开发大型的应用时是非常有用的，便于后期维护。    另一方面还需要了解vue的路由怎么用，不然怎么叫做单页面开发呢是吧，掌握路由的使用及传参等。还有一个很重要的就是类似redux的vuex（vue的状态管理），因为它是挂载在全局的，对于嵌套组件过多的应用很有用。",
    "imgs": "cloud://keung-1f46cf.6b65-keung-1f46cf/qName/q4.jpg"
  }, 
],
"link": "k2"

}
