{"_id":"XJnYBuSiwXKAQsZj","details":[{"imgs":"cloud://keung-1f46cf.6b65-keung-1f46cf/qName/q11.jpg","contents":"很多网站仍在用 JavaScript 创建 tooltips，但实际上，用 CSS 实现更加简单。最简单的方法是在 HTML 代码的 data 属性中提供 tooltip 文本，比如：data-tooltip=\"…\"。这样就可以在 CSS 中添加以下代码来在 attr() 函数中显示 tooltip 文本了： .tooltip::after { content: attr(data-tooltip); } 很好懂，对吧？当然要想设计 tooltips 还需要更多的代码，但是不必担心，有一款很棒的纯 CSS 库就是为此而生的，叫做 Hint.css 。"},{"contents":"苹果的 iOS 7 给我们带来了“毛玻璃”效果——看起来像磨砂玻璃窗的、半透明、模糊的元素。在苹果的推行下，在越来越多的地方可以见到这种效果了。再现这种效果有点复杂——在有 CSS filters 之前，只能用 模糊的半透明图片 来实现毛玻璃效果。目前几乎所有的主流浏览器都支持 CSS filters，再现毛玻璃效果就简单多了 。目前 backdrop filters 和 filter() 函数 只有 Safari 支持，但是将来我们就可以用它们实现相似的效果了。","imgs":"cloud://keung-1f46cf.6b65-keung-1f46cf/qName/q12.jpg"},{"imgs":"cloud://keung-1f46cf.6b65-keung-1f46cf/qName/q5.jpg","contents":"Fluid grids（流体网格划分）很棒，但是有几个严重的问题。例如，无法实现顶部和底部的空隙和左右的空隙大小相同。此外，根据所使用的栅格系统不同，标记有些混乱。即使是 flexbox 也不是做好的解决方法。但是有了可在 CSS 中作为 value 使用的 calc() 函数，栅格会变得更棒。在 SitePoint 的此篇教程 中，George Martsoukos 列举了几个实例，比如间隔完美的网格画廊。通过 CSS 预编译器，比如 Sass，利用 calc()  实现一套栅格系统 非常简单，并且易于维护。calc() 的浏览器支持性近乎完美，极力推荐使用。 "}],"link":"k3"}
